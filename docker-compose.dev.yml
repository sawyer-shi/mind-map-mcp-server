# Mind Map MCP Server - Development Docker Compose Configuration
# ====================================================================
# This is the DEVELOPMENT configuration that builds images from local source code.
# For production deployment with pre-built images, use docker-compose.yml instead.
#
# This compose file supports multiple MCP transport protocols and services:
# - stdio: For local tools and command-line integrations
# - streamable-http: For modern web applications with streaming HTTP
# - static-server: For serving generated mind map files
#
# Quick Start for Development:
#   cp env.template .env
#   # Edit .env file to customize settings
#   docker-compose -f docker-compose.dev.yml up -d
#
# Configuration:
# Copy env.template to .env and customize your settings

version: '3.8'

services:
  # Stdio Transport Service
  # Best for local tools and command-line integrations
  mind-map-stdio:
    build:
      context: .
      dockerfile: Dockerfile
    image: mind-map-mcp-server:unified
    container_name: mind-map-stdio-dev
    command: ["python", "main.py", "stdio", "--host", "${HOST:-0.0.0.0}"]
    volumes:
      - "${HOST_TEMP_PATH:-./temp}:/app/temp"
      - "${HOST_OUTPUT_PATH:-./output}:/app/output"
      - "${HOST_LOG_PATH:-./logs}:/app/logs"
    networks:
      - mind-map-network
    environment:
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED:-1}
      - TRANSPORT_MODE=stdio
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - HOST=${HOST:-0.0.0.0}
    restart: "no"  # stdio mode is interactive, don't auto-restart
    stdin_open: true
    tty: true
    profiles:
      - stdio  # Only start with --profile stdio

  # Streamable HTTP Transport Service
  # Modern HTTP streaming protocol for web applications
  mind-map-streamable:
    build:
      context: .
      dockerfile: Dockerfile
    image: mind-map-mcp-server:unified
    container_name: mind-map-streamable-dev
    command: ["python", "main.py", "streamable-http", "--host", "${HOST:-0.0.0.0}", "--port", "${FASTMCP_INTERNAL_PORT:-8000}"]
    ports:
      - "${STREAMABLE_PORT:-8091}:${FASTMCP_INTERNAL_PORT:-8000}"
    volumes:
      - "${HOST_TEMP_PATH:-./temp}:/app/temp"
      - "${HOST_OUTPUT_PATH:-./output}:/app/output"
      - "${HOST_LOG_PATH:-./logs}:/app/logs"
    networks:
      - mind-map-network
    environment:
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED:-1}
      - TRANSPORT_MODE=streamable-http
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - HOST=${HOST:-0.0.0.0}
      - UVICORN_HOST=${HOST:-0.0.0.0}
      - STREAMABLE_PORT=${STREAMABLE_PORT:-8091}
      - STATIC_FILE_PORT=${STATIC_FILE_PORT:-8090}
      - FASTMCP_INTERNAL_PORT=${FASTMCP_INTERNAL_PORT:-8000}
    restart: ${RESTART_POLICY:-unless-stopped}
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:${FASTMCP_INTERNAL_PORT:-8000}/')"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}

  # Static File Server Service
  # Serves generated mind map files over HTTP
  mind-map-static:
    build:
      context: .
      dockerfile: Dockerfile
    image: mind-map-mcp-server:unified
    container_name: mind-map-static-dev
    command: ["python", "static_server.py"]
    ports:
      - "${STATIC_FILE_PORT:-8090}:${STATIC_FILE_PORT:-8090}"
    volumes:
      - "${HOST_TEMP_PATH:-./temp}:/app/temp"
      - "${HOST_OUTPUT_PATH:-./output}:/app/output"
      - "${HOST_LOG_PATH:-./logs}:/app/logs"
    networks:
      - mind-map-network
    environment:
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED:-1}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - HOST=${HOST:-0.0.0.0}
      - STATIC_FILE_PORT=${STATIC_FILE_PORT:-8090}
      - STREAMABLE_PORT=${STREAMABLE_PORT:-8091}
    restart: ${RESTART_POLICY:-unless-stopped}
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:${STATIC_FILE_PORT:-8090}/health')"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}

# Network Configuration
networks:
  mind-map-network:
    driver: bridge
    
# Volume Definitions (Optional)
volumes:
  # Persistent data volumes
  mind-map-temp:
    driver: local
  mind-map-output:
    driver: local
  mind-map-logs:
    driver: local

# Usage Examples - Development Environment
# =========================================
#
# DEVELOPMENT DEPLOYMENT (builds from local source):
#
# Setup Configuration:
#   cp env.template .env
#   # Edit .env file to customize settings
#   # For development, LOCAL_HOST=127.0.0.1 is usually fine
#
# Start all web transport services:
#   docker-compose -f docker-compose.dev.yml up -d
#
# Start all transports including stdio:
#   docker-compose -f docker-compose.dev.yml --profile stdio up -d
#
# Start specific services:
#   docker-compose -f docker-compose.dev.yml up -d mind-map-streamable    # Streamable HTTP only
#   docker-compose -f docker-compose.dev.yml --profile stdio up -d mind-map-stdio  # Stdio interactive mode
#
# Test stdio mode interactively:
#   docker-compose -f docker-compose.dev.yml --profile stdio run --rm mind-map-stdio
#
# View specific service logs:
#   docker-compose -f docker-compose.dev.yml logs -f mind-map-streamable
#   docker-compose -f docker-compose.dev.yml --profile stdio logs -f mind-map-stdio
#
# Rebuild and restart (after code changes):
#   docker-compose -f docker-compose.dev.yml up --build -d
#
# Stop all services:
#   docker-compose -f docker-compose.dev.yml down
#   docker-compose -f docker-compose.dev.yml --profile stdio down  # Include stdio
#
# PRODUCTION ENVIRONMENT:
# For production deployment with pre-built Docker Hub images, use:
#   docker-compose up -d
#
# Custom Configuration Examples:
# 
# Method 1: Environment variables
#   STREAMABLE_PORT=8081 docker-compose -f docker-compose.dev.yml up -d
#   DEBUG=true HOST=127.0.0.1 docker-compose -f docker-compose.dev.yml up -d
#
# Method 2: .env file (recommended)
#   # Edit .env file with your settings
#   STREAMABLE_PORT=3091
#   HOST=127.0.0.1
#   DEBUG=true
#
# Configuration Variables:
# See env.template for complete list of configurable options
#
# Key variables:
# - HOST: Server bind address (default: 0.0.0.0)
# - STREAMABLE_PORT: Streamable HTTP port (default: 8091)  
# - STATIC_FILE_PORT: Static file server port (default: 8090)
# - DEBUG: Debug mode (default: false)
# - HOST_TEMP_PATH: Temp files directory (default: ./temp)
# - HOST_OUTPUT_PATH: Output files directory (default: ./output)
# - HOST_LOG_PATH: Log files directory (default: ./logs)
#
# Service Endpoints:
# - Stdio Transport: Interactive command-line interface
# - Streamable HTTP: http://${HOST}:${STREAMABLE_PORT}/mcp (default: http://localhost:8091/mcp)
# - Static Files: http://${HOST}:${STATIC_FILE_PORT}/output (default: http://localhost:8090/output)
